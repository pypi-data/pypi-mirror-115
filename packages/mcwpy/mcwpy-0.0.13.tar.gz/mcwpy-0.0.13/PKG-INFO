Metadata-Version: 2.1
Name: mcwpy
Version: 0.0.13
Summary: A new way to create Minecraft datapacks
Home-page: https://github.com/vianneyveremme/minecraft_with_python
Author: Vianpyro
Author-email: vianney.veremme@gmail.com
License: MIT
Description: # [Minecraft](https://www.minecraft.net)-[Datapacks](https://minecraft.gamepedia.com/Data_Pack)-Generator  
        
        ## Description:  
        A new way of coding [Minecraft](https://www.minecraft.net).
        [Minecraft](https://www.minecraft.net) is a game that you can play on your computer. It is a popular game for people who are interested in building their own worlds. And since a way to code the game itself has been implemented, I tried it. But it was not simple. So I decided to make a generator for the [Minecraft](https://www.minecraft.net) [Datapacks](https://minecraft.gamepedia.com/Data_Pack), so people can make their own [Datapacks](https://minecraft.gamepedia.com/Data_Pack) easily, even though they still need to know Python until I can make it look like [Scratch](https:/scratch.mit.edu) or something this easy.
        
        ## Installation:  
        * First of all make sure you have one of the latest [Python](https://www.python.org/downloads/) version installed on your computer.  
        * Ensure you also have [pip](https://pip.pypa.io/en/stable/installation/) installed: try running the command "`pip3 -V`" in a terminal.  
        * If this gets you an error message follow [these steps](https://pip.pypa.io/en/stable/installation/) to install it.  
        * Once you have [Python](https://www.python.org/downloads/) and [pip](https://pip.pypa.io/en/stable/installation/) installed, run the command: "`pip3 install mcwpy`".  
        
        
        ## Usage:  
        Now you should be able to import the library in your new [Python](https://www.python.org/downloads/) programs you can use the project below to help you get started with the library:  
        ```py 
        from mcwpy import *
        ```  
        * Create and compile your own datapack.  
        * Once the datapack is generated, paste it in the *datapacks* folder of your [Minecraft](https://www.minecraft.net/download) world.  
        * Type `/reload` to load the datapack.  
        * Have fun playing with your brand new handmade datapack!  
        
        ### Example:  
        ```python
        from mcwpy import *
        
        # Since this is still in development, this should only print "Hello from the MCWPy community :)".
        ```  
        
        ## Contributing:
        If you want to contribute to this project, you can do so by forking it and sending a pull request, I am opened to any idea and contribution.
        
        ## Credits:
        Thanks to [@theskyblockman](https://github.com/theskyblockman) for the idea of using workspaces.
        
        
        # 0.0.13 (2021/08/06)
        + Added a check to verify whether the Minecraft Workspace can be automatically created.  
        + Added a function to remove directories.  
        + Added `__format__` representation for Datapack objects.  
        * Changed code encryption from `utf-8` to `ascii`.  
        * Changed the way the Datapack folder is ziped.  
        * Changed replacement of older versions of the Datapack folder.  
        * Changed the Font class to a dataclass.  
        * Updated the `.gitignore` file to ignore the generated test files.  
        - Removed unused import in `datapack.py`.  
        
        # 0.0.12 (2021/07/31)
        + Added `utility.py` to the library for tools that can be useful for other modules.  
        * Made the Datapack compilation delete the old Datapack folder if authorized.  
        * Made the library inform the user where the Datapack folder by default is.  
        * Changed `ansi_escape_sequence.py` into `utility.py`.  
        
        # 0.0.11 (2021/07/30)
        + Added many more tests to `datapack.py`.  
        + Made Datapacks iterable by going through their Workspaces.  
        * Updated `CHANGELOG.md` way of displaying additions *(`+`)*, changes *(`*`)* and removals *(`-`)*.  
        * Updated the way to do the tests.  
        
        # 0.0.10 [0.0.9, 0.0.8] (2021/07/30)
        * Fixed library import issues - `datapack.py` was not importing `workspace.py` with relative imports.  
        
        # 0.0.7 (2021/07/30)
        + Added `requests==2.26.0` to `REQUIREMENTS.txt`.  
        + Added `tests.py` in which unit tests are and will be written.  
        + Added `workspace.py` to create the class `Workspace` which handles the `Datapack` workspaces.  
        + Wrote several tests for the `Datapack` class (`datapack.py`).  
        * Improved the `README.md`.  
        * Improved the `Datapack`'s `workspaces` default attribute.  
        - Removed `test.py`.  
        
        # 0.0.6 (2021/07/29)
        + Now printing the library version when imported.  
        * Fixed version **0.0.5** by using relative imports.  
        
        # 0.0.5 (2021/07/29)
        * Fixed version **0.0.4** by removing inputs in `setup.py`.  
        * Updated `verify_setup.py` to check if the display format is correct.  
        
        # 0.0.4 (2021/07/29)
        + Added ANSI escape sequences to the output for prettier messages (`ansi_escape_sequences.py`).  
        + Added an automatic version code for Datapacks with unspecified versions.  
        + Added `verify_setup.py` to check if the package can be created.  
        * Changed warnings to be easier to read.  
        * Version **0.0.3** did not work so MCWPy will be developed without subfolders.  
        
        # 0.0.3 (2021/07/29)
        * Attempt to use subfolders...  
        * If creating a Datapack using the MCWPy library works then it is a success.  
        
        # 0.0.2 (2021/07/28)
        + Made the library check if is running on [Python](https://www.python.org/downloads/) **3.9.5** or above.  
        
        # 0.0.1 (2021/07/28)
        * Fixed (or tried to) `CHANGELOG.md`, `LICENSE` and `README.md` looks on [pypi.org](https://pypi.org/project/mcwpy/).  
        
        # Initial (2021/07/28)
        + Created a `setup.py` file to setup the library.  
        + Created two functions to add or substract numbers together.  
        + Created `mcwpy\__init__.py`.  
        + Created `REQUIREMENTS.txt`.  
        + Wrote `LICENSE`.  
        + Wrote `MANIFEST.md`.  
        + Wrote `README.md`.  
        * Used `python3 setup.py sdist` in a terminal to create the library's first package.  
        * Used `twine upload --repository-url https://upload.pypi.org/legacy/ dist/*` to upload the library's first package on pypi.  
        
Keywords: Minecraft,Datapack,Function,MCFunction
Platform: UNKNOWN
Classifier: Development Status :: 1 - Planning
Classifier: Intended Audience :: Customer Service
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: End Users/Desktop
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Description-Content-Type: text/markdown
