(self.webpackChunkjupyterlab_unfold=self.webpackChunkjupyterlab_unfold||[]).push([[328],{328:(t,e,s)=>{"use strict";s.r(e),s.d(e,{default:()=>b});var i=s(511),a=s(283),r=s(769),n=s(686),o=s(340),l=s(199),c=s(850),h=s(608),d=s(797),p=s(826);const m="jp-mod-dropTarget",u="application/x-jupyter-icontents",g=new r.LabIcon({name:"ui-components:folder-open",svgstr:'<svg xmlns="http://www.w3.org/2000/svg" width="16" viewBox="0 0 576 512"><path class="jp-icon3 jp-icon-selectable" fill="#616161" d="M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z"></path></svg>\n'});class v extends i.DirListing.Renderer{constructor(t){super(),this.model=t}createNode(){const t=document.createElement("div"),e=document.createElement("ul");return e.className="jp-DirListing-content",t.appendChild(e),t.tabIndex=1,t}populateHeaderNode(t,e,s){}handleHeaderClick(t,e){return null}updateItemNode(t,e,s,i,a){if(super.updateItemNode(t,e,s,i,a),"directory"===e.type&&this.model.isOpen(e)){const e=n.DOMUtils.findElement(t,"jp-DirListing-itemIcon");g.element({container:e,className:"jp-DirListing-itemIcon",stylesheet:"listing"})}for(;null!==t.firstChild&&t.firstChild.classList.contains("jp-DirListing-vbar");)t.removeChild(t.firstChild);for(let s=0;s<e.path.split("/").length-1;s++){const e=document.createElement("div");e.classList.add("jp-DirListing-vbar"),t.insertBefore(e,t.firstChild)}}}class f extends i.DirListing{constructor(t){super(Object.assign(Object.assign({},t),{renderer:new v(t.model)}))}get headerNode(){return document.createElement("div")}sort(t){this._sortedItems=(0,c.toArray)(this.model.items()),this._sortState=t,this.update()}get model(){return this._model}async handleFileSelect(t){if(super.handleFileSelect(t),1===Object.keys(this.selection).length){const t=Object.keys(this.selection)[0],e=await this.model.getEntry(t);"directory"===e.type?(this.model.path="/"+t,this.model.toggle(e.path)):this.model.path="/"+p.PathExt.dirname(t)}}_eventDragEnter(t){if(t.mimeData.hasData(u)){const e=this._hitTestNodes(this._items,t);let s;s=-1!==e?this._items[e]:t.target,s.classList.add(m),t.preventDefault(),t.stopPropagation()}}_eventDragOver(t){t.preventDefault(),t.stopPropagation(),t.dropAction=t.proposedAction;const e=n.DOMUtils.findElement(this.node,m);e&&e.classList.remove(m);const s=this._hitTestNodes(this._items,t);let i;i=-1!==s?this._items[s]:t.target,i.classList.add(m)}_eventDrop(t){if(t.preventDefault(),t.stopPropagation(),clearTimeout(this._selectTimer),"none"===t.proposedAction)return void(t.dropAction="none");if(!t.mimeData.hasData(u))return;let e=t.target;for(;e&&e.parentElement;){if(e.classList.contains(m)){e.classList.remove(m);break}e=e.parentElement}const s=c.ArrayExt.firstIndexOf(this._items,e);let i;if(-1!==s){const t=(0,c.toArray)(this.model.items())[s];i="directory"===t.type?t.path:p.PathExt.dirname(t.path)}else i="";const r=this._manager,o=[],l=t.mimeData.getData(u);t.ctrlKey&&"move"===t.proposedAction?t.dropAction="copy":t.dropAction=t.proposedAction;for(const e of l){const s=r.services.contents.localPath(e),n=p.PathExt.basename(s),l=p.PathExt.join(i,n);l!==e&&("copy"===t.dropAction?o.push(r.copy(e,i)):o.push((0,a.renameFile)(r,e,l)))}Promise.all(o).catch((t=>{(0,n.showErrorMessage)(this._trans._p("showErrorMessage","Error while copying/moving files"),t)}))}_hitTestNodes(t,e){return c.ArrayExt.findFirstIndex(t,(t=>h.ElementExt.hitTest(t,e.clientX,e.clientY)||e.target===t))}handleEvent(t){switch(t.type){case"lm-dragenter":this._eventDragEnter(t);break;case"lm-dragover":this._eventDragOver(t);break;case"lm-drop":this._eventDrop(t);break;default:super.handleEvent(t)}}}class y extends i.FilterFileBrowserModel{constructor(t){super(t),this._isRestored=new d.PromiseDelegate,this._savedState=null,this._stateKey=null,this._path=".",this.openState={},this.app=t.app,this.contentManager=this.app.serviceManager.contents,this.basePath=".",this._savedState=t.state||null}get path(){return this._path}set path(t){this._path=t}async getEntry(t){return await this.contentManager.get(t)}async cd(t="."){const e=await this.fetchContent(this.basePath,t);this.handleContents({name:".",path:".",type:"directory",content:e}),this._savedState&&this._stateKey&&this._savedState.save(this._stateKey,{openState:this.openState}),this.onRunningChanged(this.manager.services.sessions,this.manager.services.sessions.running())}get restored(){return this._isRestored.promise}async restore(t,e=!0){const{manager:s}=this,i=`file-browser-${t}:openState`,a=this._savedState;if(!this._stateKey)if(this._stateKey=i,e&&a){await s.services.ready;try{const t=await a.fetch(i);if(!t)return await this.cd("."),void this._isRestored.resolve(void 0);this.openState=t.openState,await this.cd(".")}catch(t){await this.cd("."),await a.remove(i)}this._isRestored.resolve(void 0)}else this._isRestored.resolve(void 0)}async toggle(t="."){this.openState[t]=!this.openState[t],this.cd(".")}isOpen(t){return!!this.openState[t.path]}async fetchContent(t,e){const s=await this.contentManager.get(t);let i=[];const a=this.sortContents(s.content);this.openState[t]=!0;for(const t of a)if(i.push(t),"directory"===t.type)if(e&&e.startsWith("/"+t.path)||this.isOpen(t)){const s=await this.fetchContent(t.path,e);i=i.concat(s)}else this.openState[t.path]=!1;return i}sortContents(t){const e=t.filter((t=>"directory"===t.type)),s=t.filter((t=>"directory"!==t.type)),i=e.sort(((t,e)=>t.name.localeCompare(e.name))),a=s.sort(((t,e)=>t.name.localeCompare(e.name)));return i.concat(a)}onFileChanged(t,e){this.refresh()}}class _ extends i.FileBrowser{constructor(t){super(t),this.layout.removeWidget(this.crumbs),this.showLastModifiedColumn=!1}get showLastModifiedColumn(){return!1}set showLastModifiedColumn(t){this.listing.setColumnVisibility&&this.listing.setColumnVisibility("last_modified",!1)}createDirListing(t){return new f({model:this.model,translator:this.translator})}set useFuzzyFilter(t){}}const w="jupyterlab-unfold",b={id:w,provides:i.IFileBrowserFactory,requires:[a.IDocumentManager,o.ITranslator],optional:[l.IStateDB],activate:async(t,e,s,i)=>{const a=new n.WidgetTracker({namespace:"filebrowser"}),o=(r,n={})=>{var o;const l=new y({translator:s,auto:null===(o=n.auto)||void 0===o||o,manager:e,driveName:n.driveName||"",refreshInterval:n.refreshInterval,app:t,state:null===n.state?void 0:n.state||i||void 0}),c=new _({id:r,model:l,restore:!0,translator:s,app:t});return a.add(c),c},l=o(w,{auto:!1,restore:!1}),{commands:c}=t,h=s.load("jupyterlab"),d=new n.ToolbarButton({icon:r.addIcon,onClick:()=>{if(c.hasCommand("launcher:create"))return c.execute("launcher:create")},tooltip:h.__("New Launcher"),actualOnClick:!0});return l.toolbar.insertItem(0,"launch",d),{createFileBrowser:o,defaultBrowser:l,tracker:a}}}}}]);