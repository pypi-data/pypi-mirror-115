{% if RUN_CADDY %}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: caddy
  labels:
    app.kubernetes.io/name: caddy
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: caddy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: caddy
    spec:
      containers:
        - name: caddy
          image: {{ DOCKER_IMAGE_CADDY }}
          volumeMounts:
            - mountPath: /etc/caddy/
              name: config
            - mountPath: /data/
              name: data
          ports:
            - containerPort: 80
            - containerPort: 443
      volumes:
        - name: config
          configMap:
            name: caddy-config
        - name: data
          persistentVolumeClaim:
            claimName: caddy
{% endif %}
{% if RUN_OPENCART %}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opencart
  labels:
    app.kubernetes.io/name: opencart
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: opencart
  template:
    metadata:
      labels:
        app.kubernetes.io/name: opencart
    spec:
      containers:
        - name: opencart
          image: {{ DOCKER_IMAGE_OPENCART }}
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: 2Gi
{% endif %}
{% if RUN_MYSQL %}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app.kubernetes.io/name: mysql
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
    spec:
      containers:
        - name: mysql
          image: {{ DOCKER_IMAGE_MYSQL }}
          args: ["mysqld", "--character-set-server=utf8", "--collation-server=utf8_general_ci", "--ignore-db-dir=lost+found"]
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "{{ MYSQL_ROOT_PASSWORD }}"
          ports:
            - containerPort: 3306
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mysql
{% endif %}
{% if RUN_SMTP %}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: smtp
  labels:
    app.kubernetes.io/name: smtp
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: smtp
  template:
    metadata:
      labels:
        app.kubernetes.io/name: smtp
    spec:
      containers:
        - name: smtp
          image: {{ DOCKER_IMAGE_SMTP }}
          ports:
            - containerPort: 25
{% endif %}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app.kubernetes.io/name: nginx
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx
    spec:
      containers:
        - name: nginx
          image: {{ DOCKER_IMAGE_NGINX }}
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/
              name: config
            {{ patch("k8s-deployments-nginx-volume-mounts")|indent(12) }}
          ports:
            - containerPort: 80
      volumes:
        - name: config
          configMap:
            name: nginx-config
        {{ patch("k8s-deployments-nginx-volumes")|indent(8) }}
{{ patch("k8s-deployments") }}