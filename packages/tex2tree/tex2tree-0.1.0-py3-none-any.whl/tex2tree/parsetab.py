
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLMBrightRMBCHAR FRAC LB LMB RB RMB SQRT SUB SUPexpression : expfrac : FRAC char char\n        | FRAC bound_exp char\n        | FRAC char bound_exp\n        | FRAC bound_exp bound_expsqrt : SQRT char\n        | SQRT bound_expsqrt : SQRT mb_exp char\n        | SQRT mb_exp bound_expmb_exp : LMB chars RMBchars : char\n        | char charsbound_exp : LB exp RBpb_exp : left_single_exp SUP single_exp\n        | left_single_exp SUB single_exppb_exp : right_single_exp SUP single_exp\n        | right_single_exp SUB single_exppb_exp : left_single_exp SUP single_exp SUB single_exp\n        | left_single_exp SUB single_exp SUP single_exppb_exp : right_single_exp SUP single_exp SUB single_exp\n        | right_single_exp SUB single_exp SUP single_expexp : group_exp expexp : right_single_exp expexp : group_exp\n        | right_single_expgroup_exp : left_single_exp\n        | pb_expsingle_exp : left_single_exp\n        | right_single_expleft_single_exp : char\n        | frac\n        | sqrtright_single_exp : bound_expleft_single_exp : LMB\n        | RMBchar : CHAR'
    
_lr_action_items = {'LMB':([0,3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,51,52,53,54,],[11,11,11,-26,-27,-33,-30,-31,-32,-34,-35,11,-36,29,11,11,11,11,-6,-7,-29,-16,-28,-17,-14,-15,-13,-2,-4,-5,-3,-8,-9,11,11,11,11,-20,-21,-18,-19,]),'RMB':([0,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,],[12,12,12,-26,-27,-33,-30,-31,-32,-34,-35,12,-36,12,12,12,12,-6,-7,-29,-16,-28,-17,-14,-15,-13,-2,-4,-5,-3,-8,-9,49,-11,12,12,12,12,-12,-20,-21,-18,-19,]),'LB':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,52,53,54,],[13,13,13,-26,-27,-33,-30,-31,-32,-34,-35,13,-36,13,13,13,13,13,13,13,13,-6,-7,13,-29,-16,-28,-17,-14,-15,-13,-2,-4,-5,-3,-8,-9,13,13,13,13,-10,-20,-21,-18,-19,]),'CHAR':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,51,52,53,54,],[14,14,14,-26,-27,-33,-30,-31,-32,-34,-35,14,-36,14,14,14,14,14,14,14,14,-6,-7,14,14,-29,-16,-28,-17,-14,-15,-13,-2,-4,-5,-3,-8,-9,14,14,14,14,14,-10,-20,-21,-18,-19,]),'FRAC':([0,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,51,52,53,54,],[15,15,15,-26,-27,-33,-30,-31,-32,-34,-35,15,-36,15,15,15,15,-6,-7,-29,-16,-28,-17,-14,-15,-13,-2,-4,-5,-3,-8,-9,15,15,15,15,-20,-21,-18,-19,]),'SQRT':([0,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,51,52,53,54,],[16,16,16,-26,-27,-33,-30,-31,-32,-34,-35,16,-36,16,16,16,16,-6,-7,-29,-16,-28,-17,-14,-15,-13,-2,-4,-5,-3,-8,-9,16,16,16,16,-20,-21,-18,-19,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,14,17,18,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,51,52,53,54,],[0,-1,-24,-25,-26,-27,-33,-30,-31,-32,-34,-35,-36,-22,-23,-6,-7,-29,-16,-28,-17,-14,-15,-13,-2,-4,-5,-3,-8,-9,-20,-21,-18,-19,]),'RB':([3,4,5,6,7,8,9,10,11,12,14,17,18,23,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,51,52,53,54,],[-24,-25,-26,-27,-33,-30,-31,-32,-34,-35,-36,-22,-23,36,-6,-7,-29,-16,-28,-17,-14,-15,-13,-2,-4,-5,-3,-8,-9,-20,-21,-18,-19,]),'SUP':([4,5,7,8,9,10,11,12,14,26,27,30,32,33,35,36,37,38,39,40,41,42,],[19,21,-33,-30,-31,-32,-34,-35,-36,-6,-7,-29,-28,46,48,-13,-2,-4,-5,-3,-8,-9,]),'SUB':([4,5,7,8,9,10,11,12,14,26,27,30,31,32,34,36,37,38,39,40,41,42,],[20,22,-33,-30,-31,-32,-34,-35,-36,-6,-7,-29,45,-28,47,-13,-2,-4,-5,-3,-8,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,],[1,]),'exp':([0,3,4,13,],[2,17,18,23,]),'group_exp':([0,3,4,13,],[3,3,3,3,]),'right_single_exp':([0,3,4,13,19,20,21,22,45,46,47,48,],[4,4,4,4,30,30,30,30,30,30,30,30,]),'left_single_exp':([0,3,4,13,19,20,21,22,45,46,47,48,],[5,5,5,5,32,32,32,32,32,32,32,32,]),'pb_exp':([0,3,4,13,],[6,6,6,6,]),'bound_exp':([0,3,4,13,15,16,19,20,21,22,24,25,28,45,46,47,48,],[7,7,7,7,25,27,7,7,7,7,38,39,42,7,7,7,7,]),'char':([0,3,4,13,15,16,19,20,21,22,24,25,28,29,44,45,46,47,48,],[8,8,8,8,24,26,8,8,8,8,37,40,41,44,44,8,8,8,8,]),'frac':([0,3,4,13,19,20,21,22,45,46,47,48,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'sqrt':([0,3,4,13,19,20,21,22,45,46,47,48,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'mb_exp':([16,],[28,]),'single_exp':([19,20,21,22,45,46,47,48,],[31,33,34,35,51,52,53,54,]),'chars':([29,44,],[43,50,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> exp','expression',1,'p_expression','tex_parser.py',23),
  ('frac -> FRAC char char','frac',3,'p_frac','tex_parser.py',27),
  ('frac -> FRAC bound_exp char','frac',3,'p_frac','tex_parser.py',28),
  ('frac -> FRAC char bound_exp','frac',3,'p_frac','tex_parser.py',29),
  ('frac -> FRAC bound_exp bound_exp','frac',3,'p_frac','tex_parser.py',30),
  ('sqrt -> SQRT char','sqrt',2,'p_sqrt','tex_parser.py',43),
  ('sqrt -> SQRT bound_exp','sqrt',2,'p_sqrt','tex_parser.py',44),
  ('sqrt -> SQRT mb_exp char','sqrt',3,'p_sqrt_above','tex_parser.py',55),
  ('sqrt -> SQRT mb_exp bound_exp','sqrt',3,'p_sqrt_above','tex_parser.py',56),
  ('mb_exp -> LMB chars RMB','mb_exp',3,'p_middle_bound_exp','tex_parser.py',69),
  ('chars -> char','chars',1,'p_chars','tex_parser.py',73),
  ('chars -> char chars','chars',2,'p_chars','tex_parser.py',74),
  ('bound_exp -> LB exp RB','bound_exp',3,'p_bound_exp','tex_parser.py',81),
  ('pb_exp -> left_single_exp SUP single_exp','pb_exp',3,'p_left_exp_sup_sub','tex_parser.py',85),
  ('pb_exp -> left_single_exp SUB single_exp','pb_exp',3,'p_left_exp_sup_sub','tex_parser.py',86),
  ('pb_exp -> right_single_exp SUP single_exp','pb_exp',3,'p_right_exp_sup_sub','tex_parser.py',93),
  ('pb_exp -> right_single_exp SUB single_exp','pb_exp',3,'p_right_exp_sup_sub','tex_parser.py',94),
  ('pb_exp -> left_single_exp SUP single_exp SUB single_exp','pb_exp',5,'p_two_left_exp_sup_sub','tex_parser.py',103),
  ('pb_exp -> left_single_exp SUB single_exp SUP single_exp','pb_exp',5,'p_two_left_exp_sup_sub','tex_parser.py',104),
  ('pb_exp -> right_single_exp SUP single_exp SUB single_exp','pb_exp',5,'p_two_right_exp_sup_sub','tex_parser.py',114),
  ('pb_exp -> right_single_exp SUB single_exp SUP single_exp','pb_exp',5,'p_two_right_exp_sup_sub','tex_parser.py',115),
  ('exp -> group_exp exp','exp',2,'p_exp_right','tex_parser.py',127),
  ('exp -> right_single_exp exp','exp',2,'p_right_exp_right','tex_parser.py',133),
  ('exp -> group_exp','exp',1,'p_exp','tex_parser.py',140),
  ('exp -> right_single_exp','exp',1,'p_exp','tex_parser.py',141),
  ('group_exp -> left_single_exp','group_exp',1,'p_group_exp','tex_parser.py',145),
  ('group_exp -> pb_exp','group_exp',1,'p_group_exp','tex_parser.py',146),
  ('single_exp -> left_single_exp','single_exp',1,'p_single_exp','tex_parser.py',150),
  ('single_exp -> right_single_exp','single_exp',1,'p_single_exp','tex_parser.py',151),
  ('left_single_exp -> char','left_single_exp',1,'p_left_single_exp','tex_parser.py',155),
  ('left_single_exp -> frac','left_single_exp',1,'p_left_single_exp','tex_parser.py',156),
  ('left_single_exp -> sqrt','left_single_exp',1,'p_left_single_exp','tex_parser.py',157),
  ('right_single_exp -> bound_exp','right_single_exp',1,'p_right_single_exp','tex_parser.py',161),
  ('left_single_exp -> LMB','left_single_exp',1,'p_single_mb','tex_parser.py',165),
  ('left_single_exp -> RMB','left_single_exp',1,'p_single_mb','tex_parser.py',166),
  ('char -> CHAR','char',1,'p_char','tex_parser.py',175),
]
