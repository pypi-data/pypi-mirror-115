Metadata-Version: 2.1
Name: ndbviewer
Version: 0.0.2
Summary: This module allows you to view local data from your Google Cloud NDB projects using thee Google Datastore Emulator.
Home-page: https://github.com/ReddingSoftware/Google_NDB_Emulator
Author: Brandon Wegner
Author-email: brandon.wegner@reddingsoftware.com
License: UNKNOWN
Project-URL: Bug Tracker, https://github.com/ReddingSoftware/Google_NDB_Emulator/issues
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

  Step 1: To your existing code add:  
        import mock
        from flask import Flask
        from google.cloud import ndb
        import google.auth.credentials
        import os
        
        os.environ["DATASTORE_DATASET"] = "test"
        os.environ["DATASTORE_EMULATOR_HOST"] = "127.0.0.1:8001"
        os.environ["DATASTORE_EMULATOR_HOST_PATH"] = "127.0.0.1:8001/datastore"
        os.environ["DATASTORE_HOST"] = "http://127.0.0.1:8001"
        os.environ["DATASTORE_PROJECT_ID"] = "test"
        
        credentials = mock.Mock(spec=google.auth.credentials.Credentials)
        
 step 1.5 Anywhere you want to test the database add:
          client = ndb.Client(project="test", credentials=credentials)
          with client.context():

Alternatively you can use the example project at https://github.com/ReddingSoftware/Google_NDB_Emulator
        
  Step 2: Install google cloud SDK if you haven't already done so https://cloud.google.com/sdk/docs/install

  Step3: After navigating to your project folder in your terminal run:  
  
  gcloud components install cloud-datastore-emulator
  
  (if you want more on datastore-emulator go to https://cloud.google.com/datastore/docs/tools/datastore-emulator)

  Step 4: in your terminal run: 
    pip install ndbviewer

  Step 5: add the requirements.txt info to your current requirements.txt and in your terminal run: 
    pip install -r requirements.txt

  Step 6: in your terminal run: 
    gcloud beta emulators datastore start --data-dir=. --project test --host-port "127.0.0.1:8001"

  Step 7: Open a new terminal but leave the emulator terminal running. This can be done in visual studio code by clicking the plus sign on choosing Terminal and New Terminal.

  Step8: Make sure you are still navigated to the NDBEmulator folder in your terminal.

  Step 9: in your new terminal run:
    For mac:
      export FLASK_APP=main 
      (press return)
      export FLASK_ENV=development
      (press return)
      flask run
    For PC:
      set FLASK_APP=main
      (press return)
      set FLASK_ENV=development
      (press return)
      flask run

     Alternatively, you can run:
        python3 main.py

     or just

        python main.py

    For info on how to run Flask from the command line on Visual Studio Code go here https://docs.google.com/document/d/1bbWogGdQ48rMJFB9Wxvtt7XWw5SUfP07BVl6cHk69hk/edit?usp=sharing


   Step 10: in your browser go to http://127.0.0.1:5000
   (you'll see the main page)

   Step 11: add data to your test database. If you don't know how to add data you can use the example project at https://github.com/ReddingSoftware/Google_NDB_Emulator

   step12: in your browser go to http://127.0.0.1:5000/ndbviewer

    step13: Choose the ndb Kind that you want to view
  


