# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'BuildSignatureKeyType',
    'CisBenchmarkSeverity',
    'DeploymentPlatform',
    'DiscoveredAnalysisStatus',
    'DiscoveredContinuousAnalysis',
    'DiscoveryAnalysisKind',
    'DistributionArchitecture',
    'GoogleDevtoolsContaineranalysisV1alpha1AliasContextKind',
    'HashType',
    'LayerDirective',
    'PgpSignedAttestationContentType',
    'VersionKind',
    'VulnerabilityDetailsEffectiveSeverity',
    'VulnerabilityTypeSeverity',
]


class BuildSignatureKeyType(str, Enum):
    """
    The type of the key, either stored in `public_key` or referenced in `key_id`
    """
    KEY_TYPE_UNSPECIFIED = "KEY_TYPE_UNSPECIFIED"
    """`KeyType` is not set."""
    PGP_ASCII_ARMORED = "PGP_ASCII_ARMORED"
    """`PGP ASCII Armored` public key."""
    PKIX_PEM = "PKIX_PEM"
    """`PKIX PEM` public key."""


class CisBenchmarkSeverity(str, Enum):
    """
    The severity level of this CIS benchmark check.
    """
    SEVERITY_UNSPECIFIED = "SEVERITY_UNSPECIFIED"
    """Unknown Impact"""
    MINIMAL = "MINIMAL"
    """Minimal Impact"""
    LOW = "LOW"
    """Low Impact"""
    MEDIUM = "MEDIUM"
    """Medium Impact"""
    HIGH = "HIGH"
    """High Impact"""
    CRITICAL = "CRITICAL"
    """Critical Impact"""


class DeploymentPlatform(str, Enum):
    """
    Platform hosting this deployment.
    """
    PLATFORM_UNSPECIFIED = "PLATFORM_UNSPECIFIED"
    """Unknown"""
    GKE = "GKE"
    """Google Container Engine"""
    FLEX = "FLEX"
    """Google App Engine: Flexible Environment"""
    CUSTOM = "CUSTOM"
    """Custom user-defined platform"""


class DiscoveredAnalysisStatus(str, Enum):
    """
    The status of discovery for the resource.
    """
    ANALYSIS_STATUS_UNSPECIFIED = "ANALYSIS_STATUS_UNSPECIFIED"
    """Unknown"""
    PENDING = "PENDING"
    """Resource is known but no action has been taken yet."""
    SCANNING = "SCANNING"
    """Resource is being analyzed."""
    FINISHED_SUCCESS = "FINISHED_SUCCESS"
    """Analysis has finished successfully."""
    FINISHED_FAILED = "FINISHED_FAILED"
    """Analysis has finished unsuccessfully, the analysis itself is in a bad state."""
    FINISHED_UNSUPPORTED = "FINISHED_UNSUPPORTED"
    """The resource is known not to be supported."""


class DiscoveredContinuousAnalysis(str, Enum):
    """
    Whether the resource is continuously analyzed.
    """
    CONTINUOUS_ANALYSIS_UNSPECIFIED = "CONTINUOUS_ANALYSIS_UNSPECIFIED"
    """Unknown"""
    ACTIVE = "ACTIVE"
    """The resource is continuously analyzed."""
    INACTIVE = "INACTIVE"
    """The resource is ignored for continuous analysis."""


class DiscoveryAnalysisKind(str, Enum):
    """
    The kind of analysis that is handled by this discovery.
    """
    KIND_UNSPECIFIED = "KIND_UNSPECIFIED"
    """Unknown"""
    PACKAGE_VULNERABILITY = "PACKAGE_VULNERABILITY"
    """The note and occurrence represent a package vulnerability."""
    BUILD_DETAILS = "BUILD_DETAILS"
    """The note and occurrence assert build provenance."""
    IMAGE_BASIS = "IMAGE_BASIS"
    """This represents an image basis relationship."""
    PACKAGE_MANAGER = "PACKAGE_MANAGER"
    """This represents a package installed via a package manager."""
    DEPLOYABLE = "DEPLOYABLE"
    """The note and occurrence track deployment events."""
    DISCOVERY = "DISCOVERY"
    """The note and occurrence track the initial discovery status of a resource."""
    ATTESTATION_AUTHORITY = "ATTESTATION_AUTHORITY"
    """This represents a logical "role" that can attest to artifacts."""
    UPGRADE = "UPGRADE"
    """This represents an available software upgrade."""
    COMPLIANCE = "COMPLIANCE"
    """This represents a compliance check that can be applied to a resource."""


class DistributionArchitecture(str, Enum):
    """
    The CPU architecture for which packages in this distribution channel were built
    """
    ARCHITECTURE_UNSPECIFIED = "ARCHITECTURE_UNSPECIFIED"
    """Unknown architecture"""
    X86 = "X86"
    """X86 architecture"""
    X64 = "X64"
    """X64 architecture"""


class GoogleDevtoolsContaineranalysisV1alpha1AliasContextKind(str, Enum):
    """
    The alias kind.
    """
    KIND_UNSPECIFIED = "KIND_UNSPECIFIED"
    """Unknown."""
    FIXED = "FIXED"
    """Git tag."""
    MOVABLE = "MOVABLE"
    """Git branch."""
    OTHER = "OTHER"
    """Used to specify non-standard aliases. For example, if a Git repo has a ref named "refs/foo/bar"."""


class HashType(str, Enum):
    """
    The type of hash that was performed.
    """
    NONE = "NONE"
    """No hash requested."""
    SHA256 = "SHA256"
    """A sha256 hash."""


class LayerDirective(str, Enum):
    """
    The recovered Dockerfile directive used to construct this layer.
    """
    DIRECTIVE_UNSPECIFIED = "DIRECTIVE_UNSPECIFIED"
    """Default value for unsupported/missing directive"""
    MAINTAINER = "MAINTAINER"
    """https://docs.docker.com/engine/reference/builder/"""
    RUN = "RUN"
    """https://docs.docker.com/engine/reference/builder/"""
    CMD = "CMD"
    """https://docs.docker.com/engine/reference/builder/"""
    LABEL = "LABEL"
    """https://docs.docker.com/engine/reference/builder/"""
    EXPOSE = "EXPOSE"
    """https://docs.docker.com/engine/reference/builder/"""
    ENV = "ENV"
    """https://docs.docker.com/engine/reference/builder/"""
    ADD = "ADD"
    """https://docs.docker.com/engine/reference/builder/"""
    COPY = "COPY"
    """https://docs.docker.com/reference/builder/#copy"""
    ENTRYPOINT = "ENTRYPOINT"
    """https://docs.docker.com/engine/reference/builder/"""
    VOLUME = "VOLUME"
    """https://docs.docker.com/engine/reference/builder/"""
    USER = "USER"
    """https://docs.docker.com/engine/reference/builder/"""
    WORKDIR = "WORKDIR"
    """https://docs.docker.com/engine/reference/builder/"""
    ARG = "ARG"
    """https://docs.docker.com/engine/reference/builder/"""
    ONBUILD = "ONBUILD"
    """https://docs.docker.com/engine/reference/builder/"""
    STOPSIGNAL = "STOPSIGNAL"
    """https://docs.docker.com/engine/reference/builder/"""
    HEALTHCHECK = "HEALTHCHECK"
    """https://docs.docker.com/engine/reference/builder/"""
    SHELL = "SHELL"
    """https://docs.docker.com/engine/reference/builder/"""


class PgpSignedAttestationContentType(str, Enum):
    """
    Type (for example schema) of the attestation payload that was signed. The verifier must ensure that the provided type is one that the verifier supports, and that the attestation payload is a valid instantiation of that type (for example by validating a JSON schema).
    """
    CONTENT_TYPE_UNSPECIFIED = "CONTENT_TYPE_UNSPECIFIED"
    """`ContentType` is not set."""
    SIMPLE_SIGNING_JSON = "SIMPLE_SIGNING_JSON"
    """Atomic format attestation signature. See https://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md The payload extracted from `signature` is a JSON blob conforming to the linked schema."""


class VersionKind(str, Enum):
    """
    Distinguish between sentinel MIN/MAX versions and normal versions. If kind is not NORMAL, then the other fields are ignored.
    """
    NORMAL = "NORMAL"
    """A standard package version, defined by the other fields."""
    MINIMUM = "MINIMUM"
    """A special version representing negative infinity, other fields are ignored."""
    MAXIMUM = "MAXIMUM"
    """A special version representing positive infinity, other fields are ignored."""


class VulnerabilityDetailsEffectiveSeverity(str, Enum):
    """
    The distro assigned severity for this vulnerability when that is available and note provider assigned severity when distro has not yet assigned a severity for this vulnerability.
    """
    SEVERITY_UNSPECIFIED = "SEVERITY_UNSPECIFIED"
    """Unknown Impact"""
    MINIMAL = "MINIMAL"
    """Minimal Impact"""
    LOW = "LOW"
    """Low Impact"""
    MEDIUM = "MEDIUM"
    """Medium Impact"""
    HIGH = "HIGH"
    """High Impact"""
    CRITICAL = "CRITICAL"
    """Critical Impact"""


class VulnerabilityTypeSeverity(str, Enum):
    """
    Note provider assigned impact of the vulnerability
    """
    SEVERITY_UNSPECIFIED = "SEVERITY_UNSPECIFIED"
    """Unknown Impact"""
    MINIMAL = "MINIMAL"
    """Minimal Impact"""
    LOW = "LOW"
    """Low Impact"""
    MEDIUM = "MEDIUM"
    """Medium Impact"""
    HIGH = "HIGH"
    """High Impact"""
    CRITICAL = "CRITICAL"
    """Critical Impact"""
